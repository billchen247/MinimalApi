# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version: '1.0.0.$(Build.BuildId)'  # ✅ Auto-increment with Build ID

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Dotnet restore
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- script: |
    echo "##vso[task.setvariable variable=artifactName]$(dotnet list package --format json | jq -r '.installed[0].id')"
  displayName: 'Extract Artifact Name from dotnet list package'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

    
- task: PublishSymbols@2
  displayName: Publish symbols path
  continueOnError: True
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
    SymbolServerType: TeamServices
    
- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    ArtifactName: $(artifactName)
    TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
    

# ✅ Fix: Specify output directory for .nupkg files
- task: DotNetCoreCLI@2
  displayName: Dotnet Package
  inputs:
    command: 'pack'
    projects: '**/*.csproj'
    configuration: 'Release'
    arguments: '--output $(Build.ArtifactStagingDirectory) --property:Version=$(version)'

# ✅ Fix: Ensure .nupkg files exist before pushing
- task: NuGetCommand@2
  displayName: Push the nuget package to Feeds
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '8652216f-33ec-4cc4-912f-2fdda6d93168/ec7dd365-d6f2-4c11-a4e2-b5de5e9034c0'

